@Misc{CountWiki2013,
 author = {Wikipedia},
 howpublished = {http://en.wikipedia.org/wiki/Transistor\_count},
 title = {Transistor Count},
 month = {June},
 year = {2013},
}

@misc{AnnandIvy2012,
 author = {A. Shimpi and R. Smith},
 howpublished = {http://www.anandtech.com/show/5771/the-intel-ivy-bridge-core-i7-3770k-review/3},
 title = {The intel ivy bridge core i7-3770k review},
 month = {April},
 year = {2012},
}

@misc{JohanXeon2011,
 author = {Johan Gelas},
 howpublished = {http://www.anandtech.com/show/5553/the-xeon-e52600-dual-sandybridge-for-servers/2},
 title = {The Xeon e5-2600 dual sandybridge for servers},
 month = {March},
 year = {2012},
}

@Misc{G600Wiki2013,
author = {Wikipedia},
howpublished = {http://en.wikipedia.org/wiki/GeForce\_600\_Series},
title = {Geforce 600 Series},
month = {June},
year = {2013},
}

@misc{AnnandBulldozer2011,
 author = {A. Shimpi},
 howpublished = {http://www.anandtech.com/show/4955/the-bulldozer-review-amd-fx8150-tested},
 title = {The bulldozer review amd fx8150 tested},
 month = {October},
 year = {2011},
}

@misc{AnnandTrinity2012,
 author = {Anand Lal Shimpi},
 howpublished = {http://www.anandtech.com/show/6332/amd-trinity-a10-5800k-a8-5600k-review-part-1},
 title = { The AMD trinity a10-5800k a8-5600k review},
 month = {September},
 year = {2012},
}

@misc{yannou2011X3d,
      author = {Jean-Marc Yannou},
       title = {Xilinx’s 3D (or 2.5D) packaging enables the world’s highest capacity FPGA device and one of the most powerful processors on the market},
 institution = {Yole Développement},
       month = {November},
        year = {2011},
howpublished = {http://www.i-micronews.com/upload/pdf/3DPackaging\_Nov.2011\_AC.pdf}
}

@TechReport{XilinxConsump,
      author = {Jameel Hussein and Matt Klein and Michael Hart},
       title = {Lowering Power at 28 nm with Xilinx 7 Series FPGAs},
 institution = {Xilinx Inc},
       month = {February},
        year = {2012},
       howpublished = {http://www.xilinx.com/support/documentation/white\_papers/wp389\_Lowering\_Power\_at\_28nm.pdf}
}

@InBook{ieee802.3a,
      author = {IEEE Standards Association},
       title = {IEEE Standard for Ethernet},
     chapter = {Section 1, Chapter 3 Media Access Control (MAC) frame and packet specifications},
   publisher = {IEEE},
       month = {August},
        year = {2012},
}

@InBook{ieee802.3b,
      author = {IEEE Standards Association},
       title = {IEEE Standard for Ethernet},
     chapter = {Section 2, Chapter 22 Reconciliation Sublayer (RS) and Media Independent Interface (MII)},
   publisher = {IEEE},
       month = {August},
        year = {2012},
}


@misc{rfc2119,
      author = {Scott Bradner},
       title = {Key words for use in RFCs to Indicate Requirement Levels},
 institution = {Harvard University},
       month = {March},
        year = {1997},
howpublished = {http://www.ietf.org/rfc/rfc2119.txt}
}

@misc{rfc826,
      author = {David C. Plummer},
       title = {An Ethernet Address Resolution Protocol},
 institution = {MIT-MC},
       month = {November},
        year = {1982},
howpublished = {http://www.ietf.org/rfc/rfc768.txt}
}

@misc{rfc791,
      author = {Jon Postel},
       title = {Internet Protocol},
 institution = {University Southern California, Information Sciences Institute},
       month = {September},
        year = {1981},
howpublished = {http://www.ietf.org/rfc/rfc791.txt}
}

@misc{rfc768,
      author = {Jon Postel},
       title = {User Datagram Protocol},
 institution = {University Southern California, Information Sciences Institute},
       month = {August},
        year = {1980},
howpublished = {http://www.ietf.org/rfc/rfc826.txt}
}

@InBook{Facedata,
      author = {Coreworks},
       title = {FaceWorks CWnet01 Datasheet, Multi-purpose Autonomous Network Interface Core},
   publisher = {Coreworks},
       month = {January},
        year = {2008},
}

@misc{veribench,
      author = {Wilson Snyder},
       title = {Verilog Simulator Benchmarks},
 institution = {Veripool},
       month = {March},
        year = {2011},
howpublished = {http://www.veripool.org/wiki/veripool/Verilog\_Simulator\_Benchmarks}
}

@misc{verilatorman,
      author = {Wilson Snyder},
       title = {Verilator 3.846 Manual},
 institution = {Veripool},
       month = {March},
        year = {2013},
howpublished = {http://www.veripool.org/projects/verilator/wiki/Documentation}
}

@misc{systemperlman,
      author = {Wilson Snyder},
       title = {SystemC::SystemPerl - SystemPerl Language Extension to SystemC},
 institution = {Veripool},
       month = {June},
        year = {2013},
howpublished = {http://veripool.org/projects/systemperl/wiki/Manual-systemperl#SystemC_SystemPerl}
}

@Patent{ncapat,
 author = {José de Sousa and Nuno Lourenço and Nelson Ribeiro and Victor Martins and Ricardo Martins},
 title = {NETWORK CORE ACCESS ARCHITECTURE},
 year = {2008},
 month = {05},
 day = {15},
 number = {US 2008/0288652},
 type = {Patent},
 location = {US},
 url = {http://www.google.com/patents/US8019832},
 abstract = {The proposed architecture is integrated in a generic System on Chip (SoC) and can include or consist of an expanded network interface and an infrastructure for accessing Intellectual Property (IP) cores in the system. The architecture enables the system on chip to communicate with a user workstation connected to a communication network. The invention can be used as a simplified network interface for data exchange, which does not require embedded processors and respective software. The invention can be used to temporarily replace the normal data input and output of an IP core with stimuli and responses used for a variety of purposes.}
}

@Patent{ncapateu,
 author = {José de Sousa and Nuno Lourenço and Nelson Ribeiro and Victor Martins and Ricardo Martins},
 title = {NETWORK CORE ACCESS ARCHITECTURE},
 year = {2008},
 month = {12},
 day = {17},
 number = {EP 2003571/A2},
 type = {Patent},
 location = {EU},
 url = {http://www.google.com/patents/EP2003571A2},
 abstract = {The proposed architecture is integrated in a generic System on Chip (SoC) and can include or consist of an expanded network interface and an infrastructure for accessing Intellectual Property (IP) cores in the system. The architecture enables the system on chip to communicate with a user workstation connected to a communication network. The invention can be used as a simplified network interface for data exchange, which does not require embedded processors and respective software. The invention can be used to temporarily replace the normal data input and output of an IP core with stimuli and responses used for a variety of purposes.}
}

@misc{pycrc,
      author = {Thomas Pircher},
       title = {Cyclic Redundancy Check (CRC) calculator and C source code generator},
       month = {April},
        year = {2013},
howpublished = {http://www.tty1.net/pycrc/index\_en.html}
}

@misc{gtkwave,
      author = {Tony Bybell},
       title = {GTKWave, waveform viewer},
       month = {April},
        year = {2013},
howpublished = {http://gtkwave.sourceforge.net}
}

@misc{sniffer,
      author = {Tim Carstens},
       title = {Sniffex, Sniffer example of TCP/IP packet capture using libpcap},
       month = {June},
        year = {2013},
howpublished = {http://www.tcpdump.org/sniffex.c}
}

